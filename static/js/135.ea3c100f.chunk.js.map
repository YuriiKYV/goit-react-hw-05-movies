{"version":3,"file":"static/js/135.ea3c100f.chunk.js","mappings":"+PACA,GAAgB,aAAe,mCAAmC,WAAa,iCAAiC,SAAW,+BAA+B,SAAW,+BAA+B,OAAS,6BAA6B,aAAe,oC,kBCKnPA,EAAe,SAAC,GAClB,OADmC,EAAfC,SACL,UAAMC,EAAAA,SAAN,YAAsBA,EAAAA,QAAtB,UAAwCA,EAAAA,SAC1D,EAEc,SAASC,IAAgB,IAAD,QACnC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,IAbAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,8GAEUC,EAAAA,EAAAA,IAAYJ,GAFtB,OAELK,EAFK,OAGXR,EAASQ,GAHE,gDAMXC,QAAQC,IAAR,MANW,yDAAH,qDAShBJ,GACH,GAAE,CAACH,IAECJ,EAAL,CAIA,IAAQY,EAAqEZ,EAArEY,YAAaC,EAAwDb,EAAxDa,MAAOC,EAAiDd,EAAjDc,aAAcC,EAAmCf,EAAnCe,SAAUC,EAAyBhB,EAAzBgB,OAAQC,EAAiBjB,EAAjBiB,aAE5D,OACI,iCACI,SAAC,KAAD,CAAMC,UAAWrB,EAAAA,SAAcsB,GAAE,oBAAEjB,EAASF,aAAX,aAAE,EAAgBoB,YAAlB,QAA0B,IAA3D,sBACA,iBAAKF,UAAWrB,EAAAA,aAAhB,WACI,gBAAKqB,UAAWrB,EAAAA,WACZwB,IAAKT,EAAW,6CAAyCA,GAAgBU,EACzEC,IAAKV,EACLW,MAAM,SAEV,iBAAKN,UAAWrB,EAAAA,aAAhB,WACI,0BAAKgB,EAAL,KAAcY,OAAOC,SAAST,GAA9B,QACA,wCAAgBU,KAAKC,MAAqB,GAAfd,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAGjD,iBAAKd,UAAWrB,EAAAA,aAAhB,WACI,mDACA,gBAAIqB,UAAWrB,EAAAA,YAAf,WACI,yBAAI,SAAC,KAAD,CAASqB,UAAWvB,EAAcwB,GAAG,OAAOnB,MAAO,CAAEoB,KAAI,UAAElB,EAASF,aAAX,aAAE,EAAgBoB,MAA3E,qBACJ,yBAAI,SAAC,KAAD,CAASF,UAAWvB,EAAcwB,GAAG,UAAUnB,MAAO,CAAEoB,KAAI,UAAElB,EAASF,aAAX,aAAE,EAAgBoB,MAA9E,8BAGZ,SAAC,EAAAa,SAAD,WACI,SAAC,KAAD,QA9BX,CAmCJ,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieWrapper\":\"MovieDetails_movieWrapper__u2mNI\",\"movieImage\":\"MovieDetails_movieImage__SFpqg\",\"backLink\":\"MovieDetails_backLink__dzd-p\",\"castLink\":\"MovieDetails_castLink__U3a0A\",\"active\":\"MovieDetails_active__uPNdW\",\"addInfoWrapp\":\"MovieDetails_addInfoWrapp__6etGj\"};","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, useLocation, NavLink, Outlet } from \"react-router-dom\";\nimport { getMuviesId } from 'shared/api';\nimport css from 'pages/MovieDetails/MovieDetails.module.css'\nimport noPoster from \"pages/MovieDetails/noPoster.jpg\"\n\nconst getClassName = ({ isActive }) => {\n    return isActive ? `${css.castLink} ${css.active}` : `${css.castLink}`;\n}\n\nexport default function MovieDetails() {\n    const [state, setState] = useState(null);\n    const location = useLocation();\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                const result = await getMuviesId(movieId);\n                setState(result);\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n        fetchMovie();\n    }, [movieId])\n\n    if (!state) {\n        return\n    }\n\n    const { poster_path, title, vote_average, overview, genres, release_date } = state;\n\n    return (\n        <>\n            <Link className={css.backLink} to={location.state?.from ?? '/'}>Go back</Link>\n            <div className={css.movieWrapper}>\n                <img className={css.movieImage}\n                    src={poster_path ? `https://image.tmdb.org/t/p/original${poster_path}` : noPoster}\n                    alt={title}\n                    width=\"220\"\n                />\n                <div className={css.movieDetails}>\n                    <h2>{title} ({Number.parseInt(release_date)})</h2>\n                    <p>User Score: {Math.round(vote_average * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{genres.map(genre => genre.name).join(', ')}</p>\n                </div>\n            </div>\n            <div className={css.addInfoWrapp}>\n                <p>Additional information</p>\n                <ul className={css.addInfoList}>\n                    <li><NavLink className={getClassName} to=\"cast\" state={{ from: location.state?.from }}>Cast</NavLink></li>\n                    <li><NavLink className={getClassName} to=\"reviews\" state={{ from: location.state?.from }}>Reviews</NavLink></li>\n                </ul>\n            </div>\n            <Suspense>\n                <Outlet />\n            </Suspense>\n\n        </>\n    )\n}"],"names":["getClassName","isActive","css","MovieDetails","useState","state","setState","location","useLocation","movieId","useParams","useEffect","fetchMovie","getMuviesId","result","console","log","poster_path","title","vote_average","overview","genres","release_date","className","to","from","src","noPoster","alt","width","Number","parseInt","Math","round","map","genre","name","join","Suspense"],"sourceRoot":""}